<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scu.train.backend.Dao.TbBankFinanceDao">
  <resultMap id="BaseResultMap" type="scu.train.backend.Entity.TbBankFinance">
    <id column="finance_id" jdbcType="INTEGER" property="financeId" />
    <result column="bank_id" jdbcType="INTEGER" property="bankId" />
    <result column="finance_amount" jdbcType="INTEGER" property="financeAmount" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="repay_time" jdbcType="INTEGER" property="repayTime" />
    <result column="isExist" jdbcType="TINYINT" property="isexist" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="IntentionResultMap" type="scu.train.backend.Entity.TbFinancingIntention">
    <id column="intention_id" jdbcType="INTEGER" property="intentionId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="finance_id" jdbcType="INTEGER" property="financeId" />
    <result column="purpose" jdbcType="VARCHAR" property="purpose" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="UserMap" type="scu.train.backend.Entity.TbUser">
    <id column="account" jdbcType="INTEGER" property="account" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="identity_num" jdbcType="VARCHAR" property="identityNum" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="credit" jdbcType="INTEGER" property="credit" />
  </resultMap>
  <sql id="Base_Column_List">
    finance_id, bank_id, finance_amount, rate, repay_time, isExist, create_time, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_bank_finance
    where finance_id = #{financeId,jdbcType=INTEGER}
  </select>
  <select id="selectByFinance" parameterType="scu.train.backend.Entity.TbBankFinance" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from tb_bank_finance
    <where>
      <if test="bankId != null">
        and bank_id = #{bankId,jdbcType=INTEGER}
      </if>
      <if test="financeAmount != null">
        finance_amount = #{financeAmount,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="selectRecommend" resultMap="UserMap">
    select * from tb_user WHERE role = 'user' and credit >90 ORDER BY integral DESC
  </select>
  <select id="insertMulti" parameterType="scu.train.backend.Entity.TbBankFinance">
    insert into tb_bank_finance (bank_id, finance_amount, rate,
                                 repay_time, isExist, create_time,
                                 updateTime)
    values (#{bankId,jdbcType=INTEGER}, #{financeAmount,jdbcType=INTEGER}, #{rate,jdbcType=DECIMAL},
            #{repayTime,jdbcType=INTEGER}, #{isexist,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP})
  </select>
  <select id="selectByBankId" resultType="scu.train.backend.Entity.TbBankFinance">
    select
        <include refid="Base_Column_List"/>
        from tb_bank_finance
          where bank_id  =#{bankId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_bank_finance
    where finance_id = #{financeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="finance_id" keyProperty="financeId" parameterType="scu.train.backend.Entity.TbBankFinance" useGeneratedKeys="true">
    insert into tb_bank_finance (bank_id, finance_amount, rate, 
      repay_time, isExist, create_time, 
      updateTime)
    values (#{bankId,jdbcType=INTEGER}, #{financeAmount,jdbcType=INTEGER}, #{rate,jdbcType=DECIMAL}, 
      #{repayTime,jdbcType=INTEGER}, #{isexist,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="finance_id" keyProperty="financeId" parameterType="scu.train.backend.Entity.TbBankFinance" useGeneratedKeys="true">
    insert into tb_bank_finance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bankId != null">
        bank_id,
      </if>
      <if test="financeAmount != null">
        finance_amount,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="repayTime != null">
        repay_time,
      </if>
      <if test="isexist != null">
        isExist,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bankId != null">
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="financeAmount != null">
        #{financeAmount,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="repayTime != null">
        #{repayTime,jdbcType=INTEGER},
      </if>
      <if test="isexist != null">
        #{isexist,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="scu.train.backend.Entity.TbBankFinance">
    update tb_bank_finance
    <set>
      <if test="bankId != null">
        bank_id = #{bankId,jdbcType=INTEGER},
      </if>
      <if test="financeAmount != null">
        finance_amount = #{financeAmount,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="repayTime != null">
        repay_time = #{repayTime,jdbcType=INTEGER},
      </if>
      <if test="isexist != null">
        isExist = #{isexist,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where finance_id = #{financeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="scu.train.backend.Entity.TbBankFinance">
    update tb_bank_finance
    set bank_id = #{bankId,jdbcType=INTEGER},
      finance_amount = #{financeAmount,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DECIMAL},
      repay_time = #{repayTime,jdbcType=INTEGER},
      isExist = #{isexist,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where finance_id = #{financeId,jdbcType=INTEGER}
  </update>
</mapper>