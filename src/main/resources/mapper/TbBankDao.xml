<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scu.train.backend.Dao.TbBankDao">
  <resultMap id="BaseResultMap" type="scu.train.backend.Entity.TbBank">
    <id column="bank_id" jdbcType="INTEGER" property="bankId" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_intro" jdbcType="VARCHAR" property="bankIntro" />
    <result column="bank_phone" jdbcType="VARCHAR" property="bankPhone" />
    <result column="financing_amount" jdbcType="DECIMAL" property="financingAmount" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="repay_period" jdbcType="INTEGER" property="repayPeriod" />
  </resultMap>
  <sql id="Base_Column_List">
    bank_id, bank_name, bank_intro, bank_phone, financing_amount, rate, repay_period
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_bank
    where bank_id = #{bankId,jdbcType=INTEGER}
  </select>
  <select id="selectAllBank" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
        from tb_bank
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_bank
    where bank_id = #{bankId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="bank_id" keyProperty="bankId" parameterType="scu.train.backend.Entity.TbBank" useGeneratedKeys="true">
    insert into tb_bank (bank_name, bank_intro, bank_phone, 
      financing_amount, rate, repay_period
      )
    values (#{bankName,jdbcType=VARCHAR}, #{bankIntro,jdbcType=VARCHAR}, #{bankPhone,jdbcType=VARCHAR}, 
      #{financingAmount,jdbcType=DECIMAL}, #{rate,jdbcType=DECIMAL}, #{repayPeriod,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="bank_id" keyProperty="bankId" parameterType="scu.train.backend.Entity.TbBank" useGeneratedKeys="true">
    insert into tb_bank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankIntro != null">
        bank_intro,
      </if>
      <if test="bankPhone != null">
        bank_phone,
      </if>
      <if test="financingAmount != null">
        financing_amount,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="repayPeriod != null">
        repay_period,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankIntro != null">
        #{bankIntro,jdbcType=VARCHAR},
      </if>
      <if test="bankPhone != null">
        #{bankPhone,jdbcType=VARCHAR},
      </if>
      <if test="financingAmount != null">
        #{financingAmount,jdbcType=DECIMAL},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="repayPeriod != null">
        #{repayPeriod,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="scu.train.backend.Entity.TbBank">
    update tb_bank
    <set>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankIntro != null">
        bank_intro = #{bankIntro,jdbcType=VARCHAR},
      </if>
      <if test="bankPhone != null">
        bank_phone = #{bankPhone,jdbcType=VARCHAR},
      </if>
      <if test="financingAmount != null">
        financing_amount = #{financingAmount,jdbcType=DECIMAL},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="repayPeriod != null">
        repay_period = #{repayPeriod,jdbcType=INTEGER},
      </if>
    </set>
    where bank_id = #{bankId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="scu.train.backend.Entity.TbBank">
    update tb_bank
    set bank_name = #{bankName,jdbcType=VARCHAR},
      bank_intro = #{bankIntro,jdbcType=VARCHAR},
      bank_phone = #{bankPhone,jdbcType=VARCHAR},
      financing_amount = #{financingAmount,jdbcType=DECIMAL},
      rate = #{rate,jdbcType=DECIMAL},
      repay_period = #{repayPeriod,jdbcType=INTEGER}
    where bank_id = #{bankId,jdbcType=INTEGER}
  </update>
</mapper>