<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scu.train.backend.Dao.TbBankUserDao">
  <resultMap id="BaseResultMap" type="scu.train.backend.Entity.TbBankUser">
    <id column="account" jdbcType="INTEGER" property="account" />
    <result column="bank_id" jdbcType="INTEGER" property="bankId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    account, bank_id, `password`, real_name, phone, `role`, create_time,
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_bank_user
    where account = #{account,jdbcType=INTEGER}
  </select>
  <select id="selectAllBankUser" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
        from tb_bank_user
        where bank_id = #{bankid,jdbcType=INTEGER}
  </select>
  <select id="selectByAccount" resultType="scu.train.backend.Entity.TbBankUser">
    select
        <include refid="Base_Column_List"/>
         from tb_bank_user
           where account = #{account}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_bank_user
    where account = #{bankuserAccount,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="bankuser_account" keyProperty="bankuserAccount" parameterType="scu.train.backend.Entity.TbBankUser" useGeneratedKeys="true">
    insert into tb_bank_user (account,bank_id, `password`,
      real_name, phone, `role`, 
      create_time, update_time)
    values (#{account,jdbcType=INTEGER},#{bankId,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR},
      #{realName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="bankuser_account" keyProperty="bankuserAccount" parameterType="scu.train.backend.Entity.TbBankUser" useGeneratedKeys="true">
    insert into tb_bank_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account != null">
        account,
      </if>
      <if test="bankId != null">
        bank_id,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="role != null">
        `role`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=INTEGER},
      </if>
      <if test="bankId != null">
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="scu.train.backend.Entity.TbBankUser">
    update tb_bank_user
    <set>
      <if test="bankId != null">
        bank_id = #{bankId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        `role` = #{role,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where account = #{account,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="scu.train.backend.Entity.TbBankUser">
    update tb_bank_user
    set bank_id = #{bankId,jdbcType=INTEGER},
      `password` = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where account = #{account,jdbcType=INTEGER}
  </update>
</mapper>